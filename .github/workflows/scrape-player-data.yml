name: Scrape Fantasy Player Data

on:
  # Run daily at 6 AM UTC (during NFL offseason/preseason)
  # schedule:
    # - cron: '0 6 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target repository (owner/repo-name)'
        required: false
        default: 'your-username/fantasy-ai-data'
      batch_size:
        description: 'Batch size for scraping'
        required: false
        default: '3'

jobs:
  scrape-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hours max (250 players * ~30s each)
    
    steps:
    - name: Checkout scraper repo
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install axios cheerio
        
    - name: Run fantasy scraper
      env:
        NODE_ENV: production
      run: |
        echo "🚀 Starting FantasyPros scraper..."
        node standalone-scraper.js
        echo "📊 Scraping completed!"
        
    - name: Verify output file
      run: |
        if [ -f "player-data.json" ]; then
          echo "✅ player-data.json created successfully"
          echo "📁 File size: $(du -h player-data.json | cut -f1)"
          echo "🔢 Player count: $(jq '.total_players' player-data.json)"
          echo "📅 Generated: $(jq -r '.timestamp' player-data.json)"
        else
          echo "❌ player-data.json not found!"
          exit 1
        fi
        
    - name: Setup target repo access
      env:
        TARGET_REPO: ${{ github.event.inputs.target_repo || 'your-username/fantasy-ai-data' }}
        GITHUB_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
      run: |
        git config --global user.name 'Fantasy Data Bot'
        git config --global user.email 'bot@fantasydatabot.com'
        
    - name: Clone target repository
      env:
        TARGET_REPO: ${{ github.event.inputs.target_repo || 'your-username/fantasy-ai-data' }}
        GITHUB_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
      run: |
        echo "📥 Cloning target repository: $TARGET_REPO"
        git clone https://$GITHUB_TOKEN@github.com/$TARGET_REPO.git target-repo
        
    - name: Update target repository
      env:
        TARGET_REPO: ${{ github.event.inputs.target_repo || 'your-username/fantasy-ai-data' }}
      run: |
        cd target-repo
        
        # Copy the new data file
        cp ../player-data.json ./player-data.json
        
        # Create/update README with timestamp
        echo "# Fantasy Player Data" > README.md
        echo "" >> README.md
        echo "**Last Updated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> README.md
        echo "**Players:** $(jq '.total_players' player-data.json)" >> README.md
        echo "**Season:** $(jq '.current_nfl_season' player-data.json)" >> README.md
        echo "" >> README.md
        echo "This data is automatically updated daily by [FantasyPros Scraper](https://github.com/$(echo $GITHUB_REPOSITORY))." >> README.md
        echo "" >> README.md
        echo "## Data Structure" >> README.md
        echo "\`\`\`json" >> README.md
        echo "{" >> README.md
        echo "  \"success\": true," >> README.md
        echo "  \"timestamp\": \"$(jq -r '.timestamp' player-data.json)\"," >> README.md
        echo "  \"current_nfl_season\": $(jq '.current_nfl_season' player-data.json)," >> README.md
        echo "  \"total_players\": $(jq '.total_players' player-data.json)," >> README.md
        echo "  \"stats\": $(jq '.stats' player-data.json)," >> README.md
        echo "  \"data\": {" >> README.md
        echo "    \"player_name\": {" >> README.md
        echo "      \"name\": \"Player Name\"," >> README.md
        echo "      \"position\": \"QB|RB|WR|TE\"," >> README.md
        echo "      \"team\": \"TEAM\"," >> README.md
        echo "      \"seasons\": { \"2024\": { ... } }" >> README.md
        echo "    }" >> README.md
        echo "  }" >> README.md
        echo "}" >> README.md
        echo "\`\`\`" >> README.md
        
        # Check if anything changed
        if git diff --quiet; then
          echo "📭 No changes detected - data unchanged"
        else
          echo "📝 Changes detected - committing update"
          git add .
          git commit -m "📊 Update fantasy player data - $(date -u '+%Y-%m-%d %H:%M UTC')"
          git push origin main
          echo "✅ Successfully pushed updated data to $TARGET_REPO"
        fi
        
    - name: Summary
      if: always()
      run: |
        echo "🎯 **Scraping Summary**"
        if [ -f "player-data.json" ]; then
          echo "✅ **Success:** $(jq '.stats.successful' player-data.json) players"
          echo "❌ **Failed:** $(jq '.stats.failed' player-data.json) players" 
          echo "🚫 **Invalid:** $(jq '.stats.wrong_player' player-data.json) players"
          echo "📊 **Total:** $(jq '.total_players' player-data.json) players in database"
        else
          echo "❌ **Failed:** No data file generated"
        fi
